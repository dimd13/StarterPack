/* custom properties */

:root {
    --fontSize: 1rem;
    --mainColor: #123456;
    --highlightColor: hwb(190, 35%, 20%);
}


/* custom media queries definition */

@custom-media --viewport-medium (width<=50rem);

/* some var() & calc() */

body {
    color: var(--mainColor);
    font-size: var(--fontSize);
    line-height: calc(var(--fontSize) * 1.5);
    padding: calc((var(--fontSize) / 2)+ 1px)
}


/* custom media query usage */

@media (--viewport-medium) {
    body {
        font-size: calc(var(--fontSize) * 1.2);
    }
}


/* custom selectors defintion */

@custom-selector :--heading h1,h2,h3,h4,h5,h6;

/* custom selectors usage */
:--heading {
    margin-top: 0
}


/* colors stuff */

a {
    color: var(--highlightColor);
    transition: color 1s;
}

a:hover {
    color: gray(255, 50%)
}

a:active {
    color: rebeccapurple
}

a:any-link {
    color: color(var(--highlightColor) blackness(+20%))
}

body {
  background: rgba(153, 221, 153, 0.8);
  /* you will have the same value without alpha as a fallback */
}

/* initial property */

/*div {
  display: initial;
}*/


/* font stuff */

h2 {
    font-variant-caps: small-caps;
}

table {
    font-variant-numeric: lining-nums;
}


/* nesting sample */

a {
  /* direct nesting (& MUST be the first part of selector)*/
  & span {
    color: white;
  }

  /* @nest rule (for complex nesting) */
  @nest span & {
    color: blue;
  }

  /* media query automatic nesting */
  @media (min-width: 30em) {
    color: yellow;
  }
}


/* filters */

.blur {
    filter: blur(4px)
}

.sepia {
    filter: sepia(.8);
}
